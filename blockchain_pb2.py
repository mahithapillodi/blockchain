# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blockchain.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x62lockchain.proto\"\x0e\n\x0c\x45mptyMessage\"b\n\tblock_msg\x12\x1f\n\x0ctransactions\x18\x01 \x03(\x0b\x32\t.issue_tx\x12\x12\n\nblock_hash\x18\x02 \x01(\t\x12\x11\n\tprev_hash\x18\x03 \x01(\t\x12\r\n\x05nonce\x18\x04 \x01(\x05\"U\n\x08issue_tx\x12\x0b\n\x03src\x18\x01 \x01(\x05\x12\x0b\n\x03\x64st\x18\x02 \x01(\x05\x12\x0c\n\x04\x61mnt\x18\x03 \x01(\x02\x12\x0e\n\x06reward\x18\x04 \x01(\x02\x12\x11\n\ttimestamp\x18\x05 \x01(\x05\"K\n\x14\x61ppend_block_request\x12\x14\n\x0c\x63hain_length\x18\x01 \x01(\x05\x12\x1d\n\tnew_block\x18\x02 \x01(\x0b\x32\n.block_msg\"\x1e\n\x0c\x62lock_status\x12\x0e\n\x06status\x18\x01 \x01(\x08\"#\n\x0crequest_hash\x12\x13\n\x0b\x62lock_index\x18\x01 \x01(\x05\"!\n\x0breturn_hash\x12\x12\n\nblock_hash\x18\x01 \x01(\t\"m\n\x0eupdate_replica\x12\x1f\n\x17last_common_block_index\x18\x01 \x01(\x05\x12\x1e\n\x16last_common_block_hash\x18\x02 \x01(\t\x12\x1a\n\x06\x62locks\x18\x03 \x03(\x0b\x32\n.block_msg\")\n\x0ereplica_status\x12\x17\n\x0flast_block_hash\x18\x01 \x01(\t2\xcb\x01\n\nblockchain\x12%\n\x07issueTX\x12\t.issue_tx\x1a\r.EmptyMessage\"\x00\x12\x33\n\tpropBlock\x12\x15.append_block_request\x1a\r.block_status\"\x00\x12,\n\x0b\x63heckHashes\x12\r.request_hash\x1a\x0c.return_hash\"\x00\x12\x33\n\rupdateReplica\x12\x0f.update_replica\x1a\x0f.replica_status\"\x00\x62\x06proto3')



_EMPTYMESSAGE = DESCRIPTOR.message_types_by_name['EmptyMessage']
_BLOCK_MSG = DESCRIPTOR.message_types_by_name['block_msg']
_ISSUE_TX = DESCRIPTOR.message_types_by_name['issue_tx']
_APPEND_BLOCK_REQUEST = DESCRIPTOR.message_types_by_name['append_block_request']
_BLOCK_STATUS = DESCRIPTOR.message_types_by_name['block_status']
_REQUEST_HASH = DESCRIPTOR.message_types_by_name['request_hash']
_RETURN_HASH = DESCRIPTOR.message_types_by_name['return_hash']
_UPDATE_REPLICA = DESCRIPTOR.message_types_by_name['update_replica']
_REPLICA_STATUS = DESCRIPTOR.message_types_by_name['replica_status']
EmptyMessage = _reflection.GeneratedProtocolMessageType('EmptyMessage', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYMESSAGE,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:EmptyMessage)
  })
_sym_db.RegisterMessage(EmptyMessage)

block_msg = _reflection.GeneratedProtocolMessageType('block_msg', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK_MSG,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:block_msg)
  })
_sym_db.RegisterMessage(block_msg)

issue_tx = _reflection.GeneratedProtocolMessageType('issue_tx', (_message.Message,), {
  'DESCRIPTOR' : _ISSUE_TX,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:issue_tx)
  })
_sym_db.RegisterMessage(issue_tx)

append_block_request = _reflection.GeneratedProtocolMessageType('append_block_request', (_message.Message,), {
  'DESCRIPTOR' : _APPEND_BLOCK_REQUEST,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:append_block_request)
  })
_sym_db.RegisterMessage(append_block_request)

block_status = _reflection.GeneratedProtocolMessageType('block_status', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK_STATUS,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:block_status)
  })
_sym_db.RegisterMessage(block_status)

request_hash = _reflection.GeneratedProtocolMessageType('request_hash', (_message.Message,), {
  'DESCRIPTOR' : _REQUEST_HASH,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:request_hash)
  })
_sym_db.RegisterMessage(request_hash)

return_hash = _reflection.GeneratedProtocolMessageType('return_hash', (_message.Message,), {
  'DESCRIPTOR' : _RETURN_HASH,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:return_hash)
  })
_sym_db.RegisterMessage(return_hash)

update_replica = _reflection.GeneratedProtocolMessageType('update_replica', (_message.Message,), {
  'DESCRIPTOR' : _UPDATE_REPLICA,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:update_replica)
  })
_sym_db.RegisterMessage(update_replica)

replica_status = _reflection.GeneratedProtocolMessageType('replica_status', (_message.Message,), {
  'DESCRIPTOR' : _REPLICA_STATUS,
  '__module__' : 'blockchain_pb2'
  # @@protoc_insertion_point(class_scope:replica_status)
  })
_sym_db.RegisterMessage(replica_status)

_BLOCKCHAIN = DESCRIPTOR.services_by_name['blockchain']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EMPTYMESSAGE._serialized_start=20
  _EMPTYMESSAGE._serialized_end=34
  _BLOCK_MSG._serialized_start=36
  _BLOCK_MSG._serialized_end=134
  _ISSUE_TX._serialized_start=136
  _ISSUE_TX._serialized_end=221
  _APPEND_BLOCK_REQUEST._serialized_start=223
  _APPEND_BLOCK_REQUEST._serialized_end=298
  _BLOCK_STATUS._serialized_start=300
  _BLOCK_STATUS._serialized_end=330
  _REQUEST_HASH._serialized_start=332
  _REQUEST_HASH._serialized_end=367
  _RETURN_HASH._serialized_start=369
  _RETURN_HASH._serialized_end=402
  _UPDATE_REPLICA._serialized_start=404
  _UPDATE_REPLICA._serialized_end=513
  _REPLICA_STATUS._serialized_start=515
  _REPLICA_STATUS._serialized_end=556
  _BLOCKCHAIN._serialized_start=559
  _BLOCKCHAIN._serialized_end=762
# @@protoc_insertion_point(module_scope)
